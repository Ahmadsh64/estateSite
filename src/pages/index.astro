---
import i18next from "../i18n";
import { supabase } from "../lib/supabaseClient";
import type { Property } from "../types/property";

// שליפת ערים וכלל הנתונים
let availableCities: string[] = [];
let availableBedrooms: number[] = [2, 3, 4, 5];
let availableAmenities: string[] = ["washingmachine", "WiFi", "parking", "tv"];

const { data: citiesData, error: citiesError } = await supabase
  .from("properties")
  .select("city");

if (!citiesError && citiesData) {
  availableCities = [...new Set(citiesData.map((item: any) => item["city"]))];
}

let properties: Property[] = []; // הגדרת טיפוס למשתנה
const url = new URL(Astro.request.url);
const selectedRooms = url.searchParams.get("rooms");
const selectedAmenities = url.searchParams.getAll("amenities");
const selectedLocation = url.searchParams.get("location");

let query = supabase
  .from("properties")
  .select("*")
  .eq("is_active", true)
  .order("created_at", { ascending: false });

const { data, error } = await query;

if (!error && data) {
  properties = data as Property[]; // המרת הנתונים לטיפוס Property[]
} else {
  console.error("שגיאה בשליפת הדירות:", error?.message);
}

// סינון לפי חדרים (rooms)
if (selectedRooms) {
  if (selectedRooms === "5+") {
    properties = properties.filter((p) => (p.bedrooms ?? 0) >= 5);  
  } else {
    properties = properties.filter((p) => (p.bedrooms ?? 0) === Number(selectedRooms));
  }
}


// סינון לפי מיקום (location)
if (selectedLocation) {
  properties = properties.filter((p) => p.city === selectedLocation);
}

// סינון לפי amenities
if (selectedAmenities.length > 0) {
  properties = properties.filter((p) => {
    return selectedAmenities.every((amenity) => {
      if (amenity === "washingmachine" && !p.washingmachine) return false;
      if (amenity === "WiFi" && !p.wifi) return false;
      if (amenity === "parking" && !p.parking) return false;
      if (amenity === "tv" && !p.tv) return false;
      return true;
    });
  });
}

---

<html lang="he">
  <head>
    <meta charset="UTF-8" />
    <title>{i18next.t("property.title")}</title>
    <link rel="stylesheet" href="/styles.css" />
  </head>
  <body dir="rtl">
    <!-- Header -->
    <header>
      <div class="logo">
        <img src="/images/logo.png" alt={i18next.t("property.title")} />
        <span>{i18next.t("property.title")}</span>
      </div>
      <nav>
        <!-- כפתורים לסוגי נכסים -->
                 <a href="/">{i18next.t("search.rooms")}</a>
        <a href="/?type=דירה" class="filter-btn">{i18next.t("search.apartments")}</a>
        <a href="/?type=בית" class="filter-btn">{i18next.t("search.houses")}</a>
        <a href="/?type=צימר" class="filter-btn">{i18next.t("search.cabins")}</a>
        <a href="/?type=וילה" class="filter-btn">{i18next.t("search.villas")}</a>
        <a href="/?type=מלון" class="filter-btn">{i18next.t("search.hotels")}</a>
        <a href="/?type=אטרקציה" class="filter-btn">{i18next.t("search.attractions")}</a>
        <a href="/?type=קמפינג" class="filter-btn">{i18next.t("search.camping")}</a>
        <a href="/admin/login" class="admin-btn">{i18next.t("admin.login")}</a>
      </nav>
    </header>
    <!-- Hero Section -->
    <section class="hero">
      <div class="overlay">
        <h1>{i18next.t("search.title")}</h1>
        <p>{i18next.t("search.description")}</p>

        <!-- Search Form -->
        <form class="filters" action="/" method="get">
          <!-- Filter for Location -->
          <div class="filter-group">
            <label for="location">{i18next.t("search.location")}</label>
            <select name="location" id="location">
              <option value="">{i18next.t("search.location")}</option>
              {
                availableCities.map((city) => (
                  <option value={city}>{city}</option>
                ))
              }
            </select>
          </div>

          <!-- Filter for Check-in and Check-out -->
          <div class="filter-group">
            <label for="checkIn">{i18next.t("search.checkintime")}</label>
            <input type="date" name="checkIn" id="checkIn" />
            <label for="checkOut">{i18next.t("search.checkouttime")}</label>
            <input type="date" name="checkouttime" id="checkouttime" />
          </div>

          <!-- Filter for Rooms -->
          <div class="filter-group">
            <label for="rooms">{i18next.t("search.rooms")}</label>
            <select name="rooms" id="rooms">
              <option value="">{i18next.t("search.rooms")}</option>
              {
                availableBedrooms.map((room) => (
                  <option value={room}>{room}</option>
                ))
              }
              <option value="5+">5+</option>
            </select>
          </div>

          <!-- Filter for Occupancy -->
          <div class="filter-group">
            <label for="occupancy">{i18next.t("search.occupancy")}</label>
            <select name="occupancy" id="occupancy">
              <option value="">{i18next.t("search.occupancy")}</option>
              {
                Array.from({ length: 10 }, (_, i) => i + 1).map((occupancy) => (
                  <option value={occupancy}>{occupancy}</option>
                ))
              }
            </select>
          </div>

          <!-- Filter for Price Range -->
          <div class="filter-group">
            <label for="price">{i18next.t("search.price")}</label>
            <input type="range" name="price" id="price" min="0" max="100000" step="100" />
            <div id="price-range-value">0 - 100,000 ₪</div>
          </div>

          <!-- Filter for Amenities -->
          <div class="filter-group">
            <label>{i18next.t("search.amenities")}</label>
            <div class="amenities-checkboxes">
              <label>
                <input type="checkbox" name="amenities" value="wifi" /> WiFi
              </label>
              <label>
                <input type="checkbox" name="amenities" value="washingmachine" /> מכונת כביסה
              </label>
              <label>
                <input type="checkbox" name="amenities" value="parking" /> חניה
              </label>
              <label>
                <input type="checkbox" name="amenities" value="tv" /> טלוויזיה
              </label>
            </div>
          </div>

          <button type="submit" class="search-btn">{i18next.t("search.searchButton")}</button>
        </form>
      </div>
    </section>

    <!-- Property Listings -->
    <main>
      <ul class="home-property-list">
        {
          properties.map((p: Property) => (
            <li class="home-property-item" data-property={JSON.stringify(p)}>
              <a href={`/${p.id}`} class="home-property-link">
                <div class="home-property-images">
                  <img
                    id={`main-image-${p.id}`}
                    loading="lazy"
                    src={p.images[0]}
                    alt={p.title}
                    class="property-main-image"
                  />
                  <div class="property-thumbs">
                    {p.images.map((img, i) => (
                      <img
                        src={img}
                        alt={`תמונה ${i + 1} של ${p.title}`}
                        class="property-thumb"
                        data-index={i}
                        onclick={`document.getElementById('main-image-${p.id}').src='${img}'`}
                      />
                    ))}
                  </div>
                </div>

                <div class="property-details">
                  <h2 class="home-property-title">{p.title}</h2>
                  <p class="home-property-price">
                    {i18next.t("property.price")}: {p.price.toLocaleString("he-IL")}
                  </p>
                  <p class="home-property-location">
                    {p.location?.city || ""} {p.location?.street || ""} {p.location?.number || ""}
                    {p.location?.floor ? `, קומה ${p.location.floor}` : ""}
                  </p>

                  <p class="home-property-features">
                    {[{ label: "חדרים", value: p.bedrooms },
                      { label: "מיטות", value: p.beds },
                      { label: "חדרי אמבטיה", value: p.bathrooms },
                      { label: "נפשות מקסימום", value: p.occupancy },
                      { label: "מטבח", value: p.kitchen ? "✔️" : "❌" },
                      { label: "מכונת כביסה", value: p.washingmachine ? "✔️" : "❌" },
                      { label: "WiFi", value: p.wifi ? "✔️" : "❌" },
                      { label: "טלוויזיה", value: p.tv ? "✔️" : "❌" },
                      { label: "חניה", value: p.parking ? "✔️" : "❌" }].map((feature, i) => (
                        <span class="property-feature">
                          {feature.label}: {feature.value} {i < 8 ? "| " : ""}
                        </span>
                    ))}
                  </p>

                  <p class="property-times">
                    {[{ label: "כניסה", value: p.checkInTime || "-" },
                      { label: "יציאה", value: p.checkOutTime || "-" },
                      { label: "מינימום ימים", value: p.minStayDays || "-" }].map((time, i) => (
                        <span class="property-time">
                          {time.label}: {time.value} {i < 2 ? "| " : ""}
                        </span>
                    ))}
                  </p>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </main>

    <script type="module">
      // שליפה של selectedAmenities מה-URL
      const selectedAmenities = new URLSearchParams(window.location.search).getAll("amenities");
      const selectedRooms = new URLSearchParams(window.location.search).get("rooms");
      const selectedLocation = new URLSearchParams(window.location.search).get("location");
      const selectedPriceRange = new URLSearchParams(window.location.search).get("price");
      const selectedType = new URLSearchParams(window.location.search).get("type");

      const propertyItems = document.querySelectorAll(".home-property-item");

      propertyItems.forEach((item) => {
        if (item instanceof HTMLElement) {
          const p = JSON.parse(item.dataset.property);
          let isMatch = true;

          // סינון לפי סוג הנכס
          if (selectedType && p.type !== selectedType) {
            isMatch = false;
          }

          // סינון לפי חדרים
          if (selectedRooms && selectedRooms !== "5+" && p.bedrooms !== Number(selectedRooms)) {
            isMatch = false;
          }

          // סינון לפי מיקום
          if (selectedLocation && p.city !== selectedLocation) {
            isMatch = false;
          }

          // סינון לפי מחיר
          if (selectedPriceRange && p.price > Number(selectedPriceRange)) {
            isMatch = false;
          }

          // סינון לפי amenities
          selectedAmenities.forEach((amenity) => {
            if (amenity === "wifi" && !p.wifi) isMatch = false;
            if (amenity === "washingmachine" && !p.washingmachine) isMatch = false;
            if (amenity === "parking" && !p.parking) isMatch = false;
            if (amenity === "tv" && !p.tv) isMatch = false;
          });

          if (!isMatch) {
            item.style.display = "none";
          }
        }
      });
    </script>
  </body>
</html>
