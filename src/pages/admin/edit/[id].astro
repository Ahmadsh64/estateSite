---
import { supabase } from "../../../lib/supabaseClient";
import type { Property } from "../../../types/property";

const { params } = Astro;
const id: string = params.id as string;

async function getProperty(id: string) {
  const { data, error } = await supabase
    .from("properties")
    .select("*")
    .eq("id", id)
    .single();

  if (error || !data) return null;
  return data as Property;
}

const property = await getProperty(id);
if (!property) throw new Error(`Property with id ${id} not found`);

const location = property.location || {};
---

<html lang="he">
<head>
  <meta charset="UTF-8" />
  <title>עריכת דירה - {property.title}</title>
  <link rel="stylesheet" href="/styles.css" />
</head>
<body dir="rtl">
  <header class="edit-property-header">
    <h1>עריכת דירה - {property.title}</h1>
    <a href="/admin/dashboard" class="edit-property-back">⬅️ חזרה לדשבורד</a>
    <button id="logout-btn">🚪 יציאה</button>
  </header>

  <main class="edit-property-main">
    <form id="editForm" class="edit-property-form" data-id={property.id}>
      <!-- כותרת ומחיר -->
      <label>כותרת:</label>
      <input type="text" name="title" value={property.title} required />
      
      <label>מחיר:</label>
      <input type="number" name="price" value={property.price} required />

      <!-- מיקום -->
      <label>עיר:</label>
      <input type="text" name="city" value={location.city || ""} required/>
      <label>רחוב:</label>
      <input type="text" name="street" value={location.street || ""} />
      <label>מספר:</label>
      <input type="text" name="number" value={location.number || ""} />
      <label>קומה:</label>
      <input type="text" name="floor" value={location.floor || ""} />

      <!-- תיאור -->
      <label>תיאור:</label>
      <textarea name="description">{property.description || ""}</textarea>

      <!-- תמונות קיימות -->
      <label>תמונות קיימות:</label>
      <div id="existingImages">
        {property.images.map((img, i) => (
          <div class="edit-property-image-wrapper" data-index={i}>
            <img src={img} alt="תמונה קיימת" />
            <button type="button" class="edit-property-remove-btn">×</button>
          </div>
        ))}
      </div>

      <!-- העלאת תמונות חדשות -->
      <label>הוסף תמונות חדשות:</label>
      <input type="file" id="imageInput" multiple accept="image/*" />
      <div id="previewContainer"></div>

      <!-- פרטים נוספים -->
      <label>מספר חדרים:</label>
      <input type="number" name="bedrooms" value={property.bedrooms || ""} />
      <label>מספר מיטות:</label>
      <input type="number" name="beds" value={property.beds || ""} />
      <label>חדרי אמבטיה:</label>
      <input type="number" name="bathrooms" value={property.bathrooms || ""} />
      <label>סוג נכס:</label>
      <input type="text" name="type" value={property.type || ""} />

      <!-- מתקנים -->
      <label>מטבח:</label>
      <input type="checkbox" name="kitchen" checked={property.kitchen || false} />
      <label>מכונת כביסה:</label>
      <input type="checkbox" name="washingMachine" checked={property.washingMachine || false} />
      <label>Wi-Fi:</label>
      <input type="checkbox" name="wifi" checked={property.wifi || false} />
      <label>טלוויזיה:</label>
      <input type="checkbox" name="tv" checked={property.tv || false} />
      <label>תחבורה ציבורית בסביבה:</label>
      <input type="checkbox" name="publicTransportNearby" checked={property.publicTransportNearby || false} />
      <label>חניה:</label>
      <input type="checkbox" name="parking" checked={property.parking || false} />

      
      <!-- פרטי יצירת קשר -->
      <label>מספר טלפון:</label>
      <input type="text" name="phone" value={property.phone || ""} />
      <label>מספר WhatsApp:</label>
      <input type="text" name="whatsapp" value={property.whatsapp || ""} />

      <!-- תנאים -->
      <label>שעת כניסה:</label>
      <input type="time" name="checkInTime" value={property.checkInTime || ""} />
      <label>שעת יציאה:</label>
      <input type="time" name="checkOutTime" value={property.checkOutTime || ""} />
      <label>מינימום ימים:</label>
      <input type="number" name="minStayDays" value={property.minStayDays || ""} />

      <!-- קטגוריות -->
<fieldset>
  <legend>🎯 מתאים ל</legend>
  <label><input type="checkbox" name="suitable_for" value="משפחות" checked={property.suitable_for?.includes('משפחות') || false} /> משפחות</label>
  <label><input type="checkbox" name="suitable_for" value="דתיים" checked={property.suitable_for?.includes('דתיים') || false} /> דתיים</label>
  <label><input type="checkbox" name="suitable_for" value="קבוצות" checked={property.suitable_for?.includes('קבוצות') || false} /> קבוצות</label>
  <label><input type="checkbox" name="suitable_for" value="זוגות" checked={property.suitable_for?.includes('זוגות') || false} /> זוגות</label>
</fieldset>

<fieldset>
  <legend>📍 בקרבת המקום</legend>
  <label><input type="checkbox" name="nearby" value="בית כנסת" checked={property.nearby?.includes('בית כנסת') || false} /> בית כנסת</label>
  <label><input type="checkbox" name="nearby" value="מסעדות" checked={property.nearby?.includes('מסעדות') || false} /> מסעדות</label>
  <label><input type="checkbox" name="nearby" value="מרכז קניות" checked={property.nearby?.includes('מרכז קניות') || false} /> מרכז קניות</label>
  <label><input type="checkbox" name="nearby" value="תחבורה ציבורית" checked={property.nearby?.includes('תחבורה ציבורית') || false} /> תחבורה ציבורית</label>
</fieldset>

      <button type="submit">שמור שינויים</button>
    </form>

    <p id="message"></p>
  </main>

  <script type="module">
    const form = document.getElementById("editForm");
    const msg = document.getElementById("message");
    const imageInput = document.getElementById("imageInput");
    const previewContainer = document.getElementById("previewContainer");
    const existingImagesDiv = document.getElementById("existingImages");
    const logoutBtn = document.getElementById("logout-btn");

    // כפתור יציאה
    logoutBtn.addEventListener("click", () => {
      sessionStorage.removeItem("sb-session");
      window.location.href = "/admin/login";
    });

    // מערך התמונות הקיימות
    let existingImages = Array.from(existingImagesDiv.querySelectorAll("img")).map(img => img.src);

    // הסרת תמונה קיימת
    existingImagesDiv.addEventListener("click", (e) => {
      if (e.target.classList.contains("edit-property-remove-btn")) {
        const wrapper = e.target.parentElement;
        const index = Number(wrapper.dataset.index);
        existingImages.splice(index, 1);
        wrapper.remove();
      }
    });

    // הצגת תצוגה מקדימה של תמונות חדשות
    imageInput.addEventListener("change", () => {
      previewContainer.innerHTML = "";
      Array.from(imageInput.files).forEach((file) => {
        const reader = new FileReader();
        reader.onload = (e) => {
          const img = document.createElement("img");
          img.src = e.target.result;
          img.width = 150;
          previewContainer.appendChild(img);
        };
        reader.readAsDataURL(file);
      });
    });

    // שמירת שינויים
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(form);
      formData.append("id", form.dataset.id);

      // צרף את התמונות הקיימות
      existingImages.forEach(src => formData.append("existingImages", src));

      // הוסף את התמונות החדשות
      Array.from(imageInput.files).forEach(file => formData.append("images", file));

      try {
        const session = sessionStorage.getItem("sb-session");
        if (!session) {
          msg.textContent = "❌ אין הרשאה – אנא התחבר מחדש";
          msg.style.color = "red";
          return;
        }

        const token = JSON.parse(session).access_token;

        const res = await fetch("/api/edit-property", {
          method: "POST",
          headers: { Authorization: `Bearer ${token}` },
          body: formData,
        });

        const result = await res.json();

        if (result.success) {
          msg.textContent = "✅ הדירה עודכנה בהצלחה!";
          msg.style.color = "green";

          // עדכון תמונות קיימות אחרי עריכה
          existingImagesDiv.innerHTML = "";
          previewContainer.innerHTML = "";
          result.images.forEach((src, i) => {
            const wrapper = document.createElement("div");
            wrapper.className = "edit-property-image-wrapper";
            wrapper.dataset.index = i;
            const img = document.createElement("img");
            img.src = src;
            const btn = document.createElement("button");
            btn.type = "button";
            btn.className = "edit-property-remove-btn";
            btn.textContent = "×";
            wrapper.appendChild(img);
            wrapper.appendChild(btn);
            existingImagesDiv.appendChild(wrapper);
          });
          existingImages = [...result.images];
        } else {
          msg.textContent = `❌ שגיאה: ${result.message}`;
          msg.style.color = "red";
        }
      } catch (err) {
        console.error(err);
        msg.textContent = "❌ שגיאה בחיבור לשרת";
        msg.style.color = "red";
      }
    });
  </script>
</body>
</html>
